#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è Telegram –±–æ—Ç–∞ –¥–ª—è Railway
"""

import os
import asyncio
import sys
from http.server import HTTPServer, BaseHTTPRequestHandler
import threading
import time
import requests
import json

class HealthCheckHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        print(f"üè• GET –∑–∞–ø—Ä–æ—Å: {self.path}")
        print(f"üè• –û—Ç: {self.client_address[0]}")
        print(f"üè• User-Agent: {self.headers.get('User-Agent', 'Unknown')}")
        
        self.send_response(200)
        self.send_header('Content-type', 'text/plain')
        self.end_headers()
        
        response = "Telegram Bot is running! ü§ñ"
        self.wfile.write(response.encode())
    
    def log_message(self, format, *args):
        print(f"üìù {format % args}")

def run_health_server():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è health check"""
    try:
        port = int(os.getenv('PORT', 8080))
        print(f"üîß –ó–∞–ø—É—Å–∫ health check —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
        print(f"üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        for key, value in os.environ.items():
            if key in ['PORT', 'RAILWAY_ENVIRONMENT', 'RAILWAY_PROJECT_ID', 'TELEGRAM_TOKEN']:
                print(f"   {key}={value[:10] + '...' if len(value) > 10 else value}")
        
        server = HTTPServer(('0.0.0.0', port), HealthCheckHandler)
        print(f"üöÄ Health check —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
        print("üì° –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤...")
        
        server.serve_forever()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ health check —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()

class SimpleTelegramBot:
    def __init__(self, token):
        self.token = token
        self.base_url = f"https://api.telegram.org/bot{token}"
        self.offset = 0
    
    def send_message(self, chat_id, text):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
        try:
            url = f"{self.base_url}/sendMessage"
            data = {
                "chat_id": chat_id,
                "text": text,
                "parse_mode": "HTML"
            }
            response = requests.post(url, json=data)
            if response.status_code == 200:
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat_id}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    def get_updates(self):
        """–ü–æ–ª—É—á–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç Telegram"""
        try:
            url = f"{self.base_url}/getUpdates"
            params = {
                "offset": self.offset,
                "timeout": 30
            }
            response = requests.get(url, params=params)
            if response.status_code == 200:
                data = response.json()
                if data.get("ok") and data.get("result"):
                    for update in data["result"]:
                        self.handle_update(update)
                        self.offset = update["update_id"] + 1
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
    
    def handle_update(self, update):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram"""
        if "message" in update:
            message = update["message"]
            chat_id = message["chat"]["id"]
            text = message.get("text", "")
            
            print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {text}")
            
            if text == "/start":
                welcome_text = """
ü§ñ –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–±–æ—Ä—É –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ –ø–æ—à—É–∫ —Ä–æ–∑–≤–∞–≥ —Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π.

üìã –û–ø–∏—Å—É–≤–∞–Ω–Ω—è –∑–∞–π–º–µ –ø—Ä–∏–±–ª–∏–∑–Ω–æ 5-10 —Ö–≤–∏–ª–∏–Ω.
üíæ –í—Å—ñ –≤–∞—à—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –±—É–¥—É—Ç—å –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –∞–Ω–æ–Ω—ñ–º–Ω–æ.

–ì–æ—Ç–æ–≤—ñ –ø–æ—á–∞—Ç–∏ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è? –í—ñ–¥–ø—Ä–∞–≤—Ç–µ "–ü–æ—á–∞—Ç–∏" –¥–ª—è –ø–æ—á–∞—Ç–∫—É!
                """
                self.send_message(chat_id, welcome_text)
            
            elif text.lower() in ["–ø–æ—á–∞—Ç–∏", "start", "–Ω–∞—á–∞—Ç—å"]:
                survey_text = """
üéØ –ß—É–¥–æ–≤–æ! –ü–æ—á–∏–Ω–∞—î–º–æ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è.

‚ùì –ü–∏—Ç–∞–Ω–Ω—è 1: –î–µ –≤–∏ —á–∞—Å—Ç—ñ—à–µ —à—É–∫–∞—î—Ç–µ, —á–∏–º –∑–∞–π–Ω—è—Ç–∏—Å—å —É –≤—ñ–ª—å–Ω–∏–π —á–∞—Å?

–í–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π:
1. –£ –ø–æ–¥–æ—Ä–æ–∂–∞—Ö
2. –£ —Å–≤–æ—î–º—É –º—ñ—Å—Ç—ñ
3. –Ü —Ç–∞–º, —ñ —Ç–∞–º
4. –Ø –Ω–µ —à—É–∫–∞—é —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ

–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –Ω–æ–º–µ—Ä –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (1-4):
                """
                self.send_message(chat_id, survey_text)
            
            else:
                help_text = """
üí° –î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:
/start - –ü–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É –∑ –±–æ—Ç–æ–º
–ü–æ—á–∞—Ç–∏ - –ü–æ—á–∞—Ç–∏ –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è

–ë–æ—Ç –ø—Ä–∞—Ü—é—î –≤ —Ç–µ—Å—Ç–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ –Ω–∞ Railway! üöÇ
                """
                self.send_message(chat_id, help_text)

def run_telegram_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞"""
    token = os.getenv('TELEGRAM_TOKEN')
    if not token:
        print("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    bot = SimpleTelegramBot(token)
    print("ü§ñ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    
    try:
        while True:
            bot.get_updates()
            time.sleep(1)
    except KeyboardInterrupt:
        print("üõë Telegram –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ Telegram –±–æ—Ç–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    telegram_token = os.getenv('TELEGRAM_TOKEN')
    if not telegram_token:
        print("‚ö†Ô∏è TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ health check —Å–µ—Ä–≤–µ—Ä")
        run_health_server()
        return
    
    print("‚úÖ TELEGRAM_TOKEN –Ω–∞–π–¥–µ–Ω")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º health check —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    health_thread = threading.Thread(target=run_health_server, daemon=True)
    health_thread.start()
    
    print("üîÑ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    bot_thread = threading.Thread(target=run_telegram_bot, daemon=True)
    bot_thread.start()
    
    print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã")
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

if __name__ == "__main__":
    main()
