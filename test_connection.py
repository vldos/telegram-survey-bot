#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
"""

import os
from dotenv import load_dotenv
from supabase import create_client, Client

def test_supabase_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase"""
    print("üîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Supabase...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏
    supabase_url = os.getenv('SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_KEY')
    
    if not supabase_url or not supabase_key:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –í—ñ–¥—Å—É—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")
        print("–°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ–∞–π–ª .env –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –≤–º—ñ—Å—Ç–æ–º:")
        print("SUPABASE_URL=https://fflyixvsctfesdfiukow.supabase.co")
        print("SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZmbHlpeHZzY3RmZXNkZml1a293Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYzODQyOTYsImV4cCI6MjA3MTk2MDI5Nn0.Ywx4zCjtkeyF9xRFWsSEREvIYt3R-5FxMn2kylzJge4")
        print("TELEGRAM_TOKEN=7538064244:AAEeA6cx_FuTcEkHoF2GngbjLY5u8p2VtGw")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        supabase: Client = create_client(supabase_url, supabase_key)
        print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Supabase —É—Å–ø—ñ—à–Ω–µ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        try:
            result = supabase.table("survey_responses").select("count", count="exact").execute()
            print("‚úÖ –¢–∞–±–ª–∏—Ü—è survey_responses —ñ—Å–Ω—É—î")
            print(f"üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤: {result.count}")
        except Exception as e:
            print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü—è survey_responses –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø—É")
            print("–í–∏–∫–æ–Ω–∞–π—Ç–µ SQL –∫–æ–¥ –≤ Supabase Dashboard:")
            print("""
CREATE TABLE IF NOT EXISTS survey_responses (
    id SERIAL PRIMARY KEY,
    user_id BIGINT NOT NULL,
    username TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    answers JSONB NOT NULL
);

CREATE INDEX IF NOT EXISTS idx_survey_responses_user_id ON survey_responses(user_id);
CREATE INDEX IF NOT EXISTS idx_survey_responses_created_at ON survey_responses(created_at);
            """)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è: {str(e)}")
        return False

def test_telegram_token():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–æ–∫–µ–Ω Telegram"""
    print("\nü§ñ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Telegram —Ç–æ–∫–µ–Ω–∞...")
    
    load_dotenv()
    token = os.getenv('TELEGRAM_TOKEN')
    
    if not token:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –í—ñ–¥—Å—É—Ç–Ω—ñ–π TELEGRAM_TOKEN")
        return False
    
    # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Ç–æ–∫–µ–Ω–∞
    if ":" in token and len(token) > 20:
        print("‚úÖ –§–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π")
        return True
    else:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞")
        return False

def main():
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω—å")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Supabase
    supabase_ok = test_supabase_connection()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram
    telegram_ok = test_telegram_token()
    
    print("\n" + "=" * 50)
    if supabase_ok and telegram_ok:
        print("üéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!")
        print("–ú–æ–∂–Ω–∞ –∑–∞–ø—É—Å–∫–∞—Ç–∏ –±–æ—Ç–∞: python bot.py")
    else:
        print("‚ùå –Ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º")
        print("–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–∞–π–ª .env —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è")

if __name__ == "__main__":
    main()
