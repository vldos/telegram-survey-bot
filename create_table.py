#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –≤ Supabase
"""

import os
from dotenv import load_dotenv
from supabase import create_client, Client

def create_survey_table():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É survey_responses –≤ Supabase"""
    print("üîß –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ survey_responses...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á–∏
    supabase_url = os.getenv('SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_KEY')
    
    if not supabase_url or not supabase_key:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –í—ñ–¥—Å—É—Ç–Ω—ñ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞")
        return False
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        supabase: Client = create_client(supabase_url, supabase_key)
        print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Supabase —É—Å–ø—ñ—à–Ω–µ!")
        
        # SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        sql = """
        CREATE TABLE IF NOT EXISTS survey_responses (
            id SERIAL PRIMARY KEY,
            user_id BIGINT NOT NULL,
            username TEXT,
            created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            answers JSONB NOT NULL
        );
        
        CREATE INDEX IF NOT EXISTS idx_survey_responses_user_id ON survey_responses(user_id);
        CREATE INDEX IF NOT EXISTS idx_survey_responses_created_at ON survey_responses(created_at);
        """
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º SQL
        result = supabase.rpc('exec_sql', {'sql': sql}).execute()
        print("‚úÖ –¢–∞–±–ª–∏—Ü—è survey_responses —Å—Ç–≤–æ—Ä–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        try:
            result = supabase.table("survey_responses").select("count", count="exact").execute()
            print(f"üìä –¢–∞–±–ª–∏—Ü—è —ñ—Å–Ω—É—î. –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø–∏—Å—ñ–≤: {result.count}")
        except Exception as e:
            print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Ç–∞–±–ª–∏—Ü—ñ: {str(e)}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ: {str(e)}")
        print("\nüìã –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–±:")
        print("1. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –≤ Supabase Dashboard")
        print("2. –í—ñ–¥–∫—Ä–∏–π—Ç–µ SQL Editor")
        print("3. –í–∏–∫–æ–Ω–∞–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω–∏–π SQL –∫–æ–¥:")
        print(sql)
        return False

def test_table_access():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ —Ç–∞–±–ª–∏—Ü–µ"""
    print("\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ç–∞–±–ª–∏—Ü—ñ...")
    
    load_dotenv()
    supabase_url = os.getenv('SUPABASE_URL')
    supabase_key = os.getenv('SUPABASE_KEY')
    
    try:
        supabase: Client = create_client(supabase_url, supabase_key)
        
        # –ü—Ä–æ–±—É–µ–º –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        test_data = {
            "user_id": 123456789,
            "username": "test_user",
            "answers": {"test": "data"}
        }
        
        result = supabase.table("survey_responses").insert(test_data).execute()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞ –∑–∞–ø–∏—Å—å –¥–æ–¥–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        supabase.table("survey_responses").delete().eq("user_id", 123456789).execute()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞ –∑–∞–ø–∏—Å—å –≤–∏–¥–∞–ª–µ–Ω–∞")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ: {str(e)}")
        return False

def main():
    print("üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö Supabase")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    table_created = create_survey_table()
    
    if table_created:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø
        access_ok = test_table_access()
        
        if access_ok:
            print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")
            print("–ë–æ—Ç –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏!")
        else:
            print("\n‚ö†Ô∏è –Ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –¥–æ—Å—Ç—É–ø–æ–º –¥–æ —Ç–∞–±–ª–∏—Ü—ñ")
    else:
        print("\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é")

if __name__ == "__main__":
    main()
