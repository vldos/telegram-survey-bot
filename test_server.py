#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ health check –Ω–∞ Railway
"""

import os
import asyncio
import sys
from aiohttp import web

async def health_check(request):
    """–ü—Ä–æ—Å—Ç–æ–π health check endpoint"""
    print(f"üè• Health check –∑–∞–ø—Ä–æ—Å –æ—Ç {request.remote}")
    print(f"üè• User-Agent: {request.headers.get('User-Agent', 'Unknown')}")
    print(f"üè• Method: {request.method}")
    print(f"üè• Path: {request.path}")
    
    return web.Response(
        text="Test server is running! üöÄ", 
        status=200,
        content_type='text/plain'
    )

async def main():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        port = int(os.getenv('PORT', 8080))
        print(f"üîß –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
        print(f"üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: PORT={os.getenv('PORT')}")
        
        app = web.Application()
        app.router.add_get('/', health_check)
        app.router.add_get('/health', health_check)
        
        runner = web.AppRunner(app)
        await runner.setup()
        site = web.TCPSite(runner, '0.0.0.0', port)
        await site.start()
        
        print(f"üöÄ –¢–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {port}")
        print("üì° –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤...")
        print("üì° –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—É—Ç–∏: /, /health")
        
        # –î–µ—Ä–∂–∏–º —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–Ω—ã–º
        try:
            await asyncio.Future()  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
        except KeyboardInterrupt:
            print("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
            await runner.cleanup()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())
